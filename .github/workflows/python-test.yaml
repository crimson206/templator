name: Test

on:
  pull_request:
    branches: [ main, develop, 'release/*', 'feature/*' ]
  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.9", "3.10", "3.11"]

    steps:
    - uses: actions/checkout@v4
      with:
        ref: ${{ github.event.workflow_run.head_branch }}
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install flake8
        pip install setuptools wheel
        pip install -r requirements.txt
        pip install .
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Run tests and generate coverage report
      run: |
        pytest --cov=src/crimson/templator --cov-report=html
    - name: Upload coverage report
      uses: actions/upload-artifact@v3
      with:
        name: coverage-report
        path: htmlcov

  notify-coverage:
    runs-on: ubuntu-latest
    needs: test-and-coverage
    if: success() || failure()
    steps:
      - name: Download coverage report
        uses: actions/download-artifact@v3
        with:
          name: coverage-report
          path: htmlcov

      - name: Post coverage report link
        run: |
          echo "Coverage report: ${GITHUB_SERVER_URL}/${GITHUB_REPOSITORY}/actions/runs/${GITHUB_RUN_ID}" > coverage_report.txt
          gh pr comment ${{ github.event.pull_request.number }} --body-file coverage_report.txt
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
